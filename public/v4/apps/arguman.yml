captainVersion: 4

services:
  # $$cap_appname-redis:
  #   image: redis:latest
  #   restart: always

  # $$cap_appname-mongo:
  #   image: mongo:3.2.3
  #   restart: always
  #   ports:
  #     - '27017:27017'

  # $$cap_appname-db:
  #   image: postgres:latest
  #   restart: always

  $$cap_appname:
    caproverExtra:
      #dockerFilepath: arguman/Dockerfile
      # see https://github.com/caprover/one-click-apps/blob/master/public/v4/apps/pocketbase.yml
      dockerfileLines:
        - "# syntax=docker/dockerfile:1.3-labs"
        - FROM python:2.7-slim
        - WORKDIR /app
        # - >-
        #     CMD gotenberg
        #     --api-port=$API_PORT
        #     --api-timeout=$API_TIMEOUT
        #- RUN echo '#!/bin/bash\nprintenv\nexec /usr/local/bin/gost -L=tcp://:80/$TARGET_SERVER_IP:$TARGET_SERVER_NONSSL_PORT -L=tcp://:443/$TARGET_SERVER_IP:$TARGET_SERVER_SSL_PORT' > /start.sh
        - >- #when yaml is read this will remove all end of lines from this string. Also all subsequent lines MUST start aligned to RUN (otherwise yml will think it is a new key)
            RUN apt-get update && apt-get install -y git python-dev
            build-essential
            libpq-dev
            && rm -rf /var/lib/apt/lists/*
        - >-
            RUN
            git clone https://github.com/arguman/arguman.org.git . &&
            ls -al .
        - RUN pip install -r requirements.txt
        - RUN python -m textblob.download_corpora
        - >-
            RUN echo "
            # see https://github.com/arguman/arguman.org/blob/master/web/main/settings_local.py.ex \n2
            DEFAULT_FROM_EMAIL = 'info@arguman.org' \n2
            POSTMARK_TOKEN = 'xyz' \n2
            POSTMARK_API_URL = "https://api.postmarkapp.com/email" \n2
            # \n2
            # \n2
            DATABASES = { \n2
            'default': { \n2
            'ENGINE': 'django.db.backends.postgresql_psycopg2', \n2
            'NAME': 'postgres', \n2
            'USER': 'postgres', \n2
            'HOST': 'db', \n2
            'PORT': 5432, \n2
            } \n2
            } \n2
            ALLOWED_HOSTS = ['*'] \n2
            DEBUG = True \n2
            # \n2
            SERVER_EMAIL = 'info@arguman.org' \n2
            BASE_DOMAIN = 'localhost:8000' #your docker machine ip if running on virtual server \n2
            MONGODB_HOST = 'mongodbhost' #your docker machine ip if running on virtual server \n2
            # CACHES = { \n2
            #     "default": { \n2
            #         "BACKEND": "redis_cache.cache.RedisCache", \n2
            #         "LOCATION": "127.0.0.1:6379:1" \n2
            #     } \n2
            # } \n2
            " | sed "s/\\n2/\n/g" >web/main/settings_local.py
          # - RUN echo $full_Script >> settings_local.py
        - RUN echo settings_local.py is && cat web/main/settings_local.py
        - RUN python web/manage.py migrate
        - EXPOSE 8000
        - CMD ["python", "web/manage.py","runserver","0.0.0.0:8000"]
      containerHttpPort: '8000'
    volumes:
      - '$$cap_appname-data:/code'
    # depends_on:
    #   - $$cap_appname-db
    #   - $$cap_appname-redis
    #   - $$cap_appname-mongo
    # '$$cap_appname':
    #   image: privatebin/nginx-fpm-alpine:$$cap_version
    #   environment:
    #     TZ: '$$cap_tz'
    #     PHP_TZ: '$$cap_tz'
    #   volumes:
    #     - '$$cap_appname-data:/srv/data'
    #     - '$$cap_appname-cfg:/srv/cfg'
    #   caproverExtra:
    #     containerHttpPort: '8080'
caproverOneClickApp:
  variables:
  - id: $$cap_git_project
    label: Git Project
    defaultValue: 'https://github.com/arguman/arguman.org.git'
    description: |
      For private repos add the user/token here (ex:https://username:token@github.com/) or for github.com you can configure username/token.
      Get your github token from https://github.com/settings/tokens/new
    validRegex: /.{1,}/
  - id: $$cap_git_username
    label: Git Username
    defaultValue: ''
  - id: $$cap_git_access_token
    label: Git Access Token For Private Repos
    defaultValue: ''
    description:
  instructions:
    start: >-
      1. Fill in the database password.
      2. Deploy the app.

      More details on https://github.com/arguman/arguman.org

    end: >-
      Aaaand you're done! ðŸ˜„
      Your service is available at http://$$cap_appname.$$cap_root_domain
  displayName: Arguman
  isOfficial: true
  description: Arguman is a platform for creating and sharing structured arguments.
  documentation: >-
    Originaly at https://arguman.org but the english database got lost.


# {
#   "captainVersion": "4",
#   "version": "3.3"
#   "services": {
#     "$$cap_appname": {
#           "image": "adminer:$$cap_adminer_version",
#           "containerHttpPort": "8080",
#           "environment": {
#               "ADMINER_DESIGN": "$$cap_adminer_design"
#           }
#     }
#   }
# }
